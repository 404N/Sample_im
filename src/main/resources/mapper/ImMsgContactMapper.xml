<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="geektime.im.lecture.dao.ImMsgContactMapper">
  <resultMap id="BaseResultMap" type="geektime.im.lecture.entity.ImMsgContact">
    <!--
      WARNING - @mbg.generated
    -->
    <result column="owner_uid" jdbcType="INTEGER" property="ownerUid" />
    <result column="other_uid" jdbcType="INTEGER" property="otherUid" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <update id="updateContact">
    update im_msg_contact
    set mid=#{imMsgContact.mid,jdbcType=INTEGER}
    where owner_uid=#{imMsgContact.ownerUid,jdbcType=INTEGER} and
          other_uid=#{imMsgContact.otherUid,jdbcType=INTEGER}
  </update>
  <select id="findMessageContactsByOwnerUid" resultType="geektime.im.lecture.entity.ImMsgContact">
    select *
    from im_msg_contact
    where owner_uid= #{ownerUid,jdbcType=INTEGER}
    order by mid desc
  </select>
  <select id="findMsgByOwnerIdAndOtherId" resultType="geektime.im.lecture.entity.ImMsgContact">
    select *
    from im_msg_contact
    where owner_uid=#{ownerUid,jdbcType=INTEGER} and
          other_uid=#{otherUid,jdbcType=INTEGER}
  </select>
</mapper>